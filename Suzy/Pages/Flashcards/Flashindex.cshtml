@page
@model Suzy.Pages.Flashcards.FlashindexModel
@{
    ViewData["Title"] = "Flashcards";
    Layout = "_Layout";
}

<style>
    /* Use login page color scheme */
    .futuristic-card {
        background-color: var(--card);
        color: var(--card-foreground);
        border: 1px solid var(--warm-brown);
        border-radius: 2rem;
        padding: 2rem;
        transition: all 0.4s ease-in-out;
        height: 100%;
        box-shadow: 0 8px 24px rgba(92, 69, 47, 0.1);
    }

    .futuristic-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 12px 32px rgba(92, 69, 47, 0.15);
    }

    .futuristic-heading {
        text-align: center;
        font-size: 2rem;
        font-weight: 700;
        letter-spacing: 1.2px;
        color: inherit;
        margin-bottom: 1.8rem;
    }

    .futuristic-label {
        font-weight: 600;
        font-size: 0.95rem;
        color: inherit;
        margin-bottom: 0.4rem;
    }

    .futuristic-input,
    .futuristic-textarea {
        background-color: var(--card);
        border: 2px solid var(--warm-brown);
        color: var(--card-foreground);
        padding: 0.7rem 1rem;
        border-radius: var(--radius);
        width: 100%;
        transition: all 0.3s ease;
    }

    .futuristic-select {
        background-color: var(--card);
        border: 2px solid var(--warm-brown);
        color: var(--card-foreground);
        padding: 0.7rem 1rem;
        border-radius: var(--radius);
        width: 100%;
        transition: all 0.3s ease;
    }

    .futuristic-select option {
        background: var(--card);
        color: var(--card-foreground);
    }

    .futuristic-input:focus,
    .futuristic-select:focus,
    .futuristic-textarea:focus {
        outline: none;
        border-color: var(--warm-brown);
        box-shadow: 0 0 0 3px rgba(92, 69, 47, 0.1);
    }

    .futuristic-btn {
        background: linear-gradient(135deg, var(--warm-brown), hsl(25, 45%, 30%));
        border: none;
        padding: 0.85rem;
        color: var(--primary-foreground);
        font-weight: 600;
        letter-spacing: 0.6px;
        border-radius: var(--radius);
        box-shadow: 0 6px 12px rgba(92, 69, 47, 0.25);
        transition: all 0.3s ease-in-out;
    }

    .futuristic-btn:hover {
        background: linear-gradient(135deg, hsl(25, 45%, 25%), hsl(25, 45%, 20%));
        transform: translateY(-2px);
        box-shadow: 0 10px 20px rgba(92, 69, 47, 0.45);
    }

    /* Style for the generated flashcards */
    .flashcard-futuristic {
        border: 1px solid var(--warm-brown);
        background-color: rgba(92, 69, 47, 0.08);
        border-radius: 1.5rem;
        padding: 1.5rem;
        height: 100%;
        transition: all 0.3s ease;
        color: inherit;
    }

    .flashcard-futuristic:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 15px rgba(92, 69, 47, 0.2);
    }

    .flashcard-futuristic-q {
        font-weight: 700;
        margin-bottom: 0.75rem;
    }

    .flashcard-futuristic-a {
        opacity: 0.9;
    }
</style>

<div class="page-container">
    @await Html.PartialAsync("_Sidebar")

    <div class="page-content">
        <div class="container-fluid p-3">
            <div class="container mt-5">
                <div class="row justify-content-center">
                    <div class="col-md-10">
                        <div class="futuristic-card">
                            <h3 class="futuristic-heading">Generate Flashcards from Notes</h3>

                            @if (TempData["Message"] != null)
                            {
                                <div class="alert alert-success">@TempData["Message"]</div>
                            }
                            @if (TempData["Error"] != null)
                            {
                                <div class="alert alert-danger">@TempData["Error"]</div>
                            }

                            <form method="post" asp-page-handler="Load" class="mb-3" id="flashForm">
                                <div class="row g-3">
                                    <div class="col-md-6">
                                        <label class="futuristic-label">Select Subject</label>
                                        <select asp-for="SelectedCategoryId" class="futuristic-select"
                                            asp-items="Model.CategoryOptions" id="categorySelect">
                                            <option value="">-- Select Subject --</option>
                                        </select>
                                    </div>

                                    <div class="col-md-6">
                                        <label class="futuristic-label">Select Note</label>
                                        <select asp-for="SelectedNoteId" class="futuristic-select"
                                            asp-items="Model.NoteOptions" id="noteSelect">
                                            <option value="">-- Select Note --</option>
                                        </select>
                                    </div>

                                    <div class="col-md-12 d-grid">
                                        <button type="submit" class="futuristic-btn">Load Content</button>
                                    </div>
                                </div>
                            </form>

                            @if (!string.IsNullOrEmpty(Model.LoadedContent))
                            {
                                <div class="mb-3">
                                    <label class="futuristic-label">Loaded Note Content</label>
                                    <textarea class="futuristic-textarea" rows="6" readonly>@Model.LoadedContent</textarea>
                                </div>

                                <form method="post" asp-page-handler="Generate">
                                    <input type="hidden" asp-for="SelectedCategoryId" />
                                    <input type="hidden" asp-for="SelectedNoteId" />
                                    <div class="d-grid">
                                        <button type="submit" class="futuristic-btn mb-3">Generate Flashcards</button>
                                    </div>
                                </form>
                            }

                            @if (Model.Flashcards.Any())
                            {
                                <hr />
                                <h5 class="mt-4 mb-3">Generated Flashcards</h5>
                                <div class="row">
                                    @foreach (var card in Model.Flashcards)
                                    {
                                        <div class="col-md-6 mb-3">
                                            <div class="flashcard-futuristic">
                                                <h6 class="flashcard-futuristic-q">Q: @card.Question</h6>
                                                <p class="flashcard-futuristic-a mb-0">A: @card.Answer</p>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.getElementById("categorySelect").addEventListener("change", function () {
            const categoryId = this.value;
            const noteSelect = document.getElementById("noteSelect");

            if (!categoryId) {
                noteSelect.innerHTML = '<option value="">-- Select Note --</option>';
                return;
            }

            fetch(`?handler=Notes&categoryId=${categoryId}`)
                .then(res => res.json())
                .then(data => {
                    noteSelect.innerHTML = '<option value="">-- Select Note --</option>';
                    data.forEach(note => {
                        const option = document.createElement("option");
                        option.value = note.value;
                        option.text = note.text;
                        noteSelect.appendChild(option);
                    });
                });
        });
    </script>
}