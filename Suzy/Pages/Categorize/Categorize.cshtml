@page
@model Suzy.Pages.Categorize.CategorizeModel
@{
    ViewData["Title"] = "Categorize Notes";
    Layout = "_Layout";
}

@section Head {
    <link rel="stylesheet" href="~/css/upload&categorize.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true">
}


<div class="page-container">
    @await Html.PartialAsync("_Sidebar")

    <div class="page-content">
        <div class="container-fluid p-3">
            <div class="container mt-5">
                <div class="row g-4">
                    <div class="col-lg-7">
                        <div class="futuristic-card">
                            <h3 class="futuristic-heading">Categorize Notes</h3>

                            @if (TempData["Message"] != null)
                            {
                                <div class="alert alert-success alert-dismissible fade show" role="alert">
                                    @TempData["Message"]
                                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                                </div>
                            }
                            @if (TempData["Error"] != null)
                            {
                                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                                    @TempData["Error"]
                                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                                </div>
                            }

                            <form method="post">
                                <div class="mb-3">
                                    <label asp-for="NewCategoryName" class="futuristic-label">New Category</label>
                                    <input asp-for="NewCategoryName" class="futuristic-input" />
                                </div>
                                <div class="d-grid">
                                    <button type="submit" asp-page-handler="AddCategory" class="futuristic-btn">Add Category</button>
                                </div>
                            </form>

                            @if (Model.Categories.Any())
                            {
                                <hr />
                                <h5 class="mt-4">Your Categories</h5>
                                <ul class="list-unstyled mt-3">
                                    @foreach (var category in Model.Categories)
                                    {
                                        <li class="futuristic-list-item d-flex justify-content-between align-items-center">
                                            @category.Name
                                            <form method="post" asp-page-handler="DeleteCategory" asp-route-id="@category.Id" class="d-inline">
                                                <button class="btn btn-sm btn-outline-danger" onclick="return confirm('Delete this category?')">Delete</button>
                                            </form>
                                        </li>
                                    }
                                </ul>
                            }

                            @if (Model.Notes.Any() && Model.Categories.Any())
                            {
                                <hr />
                                <h5 class="mt-4">Assign Notes to Categories</h5>
                                <form id="categorizeForm" method="post" asp-page-handler="SaveCategorization">
                                    <div class="table-responsive">
                                        <table id="selectionTable" class="table futuristic-table table-bordered mt-3">
                                            <thead>
                                                <tr>
                                                    <th>Note Title</th>
                                                    @foreach (var category in Model.Categories)
                                                    {
                                                        <th class="text-center">@category.Name</th>
                                                    }
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var note in Model.Notes)
                                                {
                                                    <tr>
                                                        <td>@note.Title</td>
                                                        @foreach (var category in Model.Categories)
                                                        {
                                                            <td class="text-center">
                                                                <input type="checkbox" name="Selections[@note.Id]" value="@category.Id"
                                                                       @(Model.NoteCategories.ContainsKey(note.Id) && Model.NoteCategories[note.Id].Contains(category.Id) ? "checked" : "") />
                                                            </td>
                                                        }
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                    <div class="d-grid mt-3">
                                        <button type="button" id="openConfirmModalBtn" class="futuristic-btn">Save Categorization</button>
                                    </div>
                                </form>
                            }
                            else if (!Model.Categories.Any())
                            {
                                <p class="text-muted mt-4">Add categories to begin categorizing notes.</p>
                            }
                            else if (!Model.Notes.Any())
                            {
                                <p class="text-muted mt-4">No notes to categorize.</p>
                            }
                        </div>
                    </div>

                    <div class="col-lg-5">
                        <div class="futuristic-card card-static-white">
                            <h3 class="futuristic-heading">Categorized Notes</h3>
                            @{
                                var anyCategorized = Model.NoteCategories.Any(kvp => kvp.Value.Any());
                            }

                            @if (anyCategorized)
                            {
                                <div class="accordion futuristic-accordion" id="categorizedAccordion">
                                    @foreach (var category in Model.Categories.OrderBy(c => c.Name))
                                    {
                                        var notesInCategory = Model.Notes
                                            .Where(n => Model.NoteCategories.ContainsKey(n.Id) && Model.NoteCategories[n.Id].Contains(category.Id))
                                            .ToList();

                                        @if (notesInCategory.Any())
                                        {
                                            <div class="accordion-item">
                                                <h2 class="accordion-header" id="heading-@category.Id">
                                                    <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@category.Id" aria-expanded="false" aria-controls="collapse-@category.Id">
                                                        @category.Name &nbsp;<span class="badge bg-primary rounded-pill">@notesInCategory.Count</span>
                                                    </button>
                                                </h2>
                                                <div id="collapse-@category.Id" class="accordion-collapse collapse" aria-labelledby="heading-@category.Id" data-bs-parent="#categorizedAccordion">
                                                    <div class="accordion-body">
                                                        <ul>
                                                            @foreach (var note in notesInCategory)
                                                            {
                                                                <li>@note.Title</li>
                                                            }
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    }
                                </div>
                            }
                            else
                            {
                                <p class="text-center text-muted mt-4">No notes have been categorized yet. Use the panel on the left to assign notes to categories.</p>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="confirmationModal" tabindex="-1" aria-labelledby="confirmationModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmationModalLabel">Confirm Selections</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Please review your categorizations before saving. The following associations will be made:</p>
                <div id="confirmationTableContainer"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="futuristic-btn btn-secondary" data-bs-dismiss="modal">Go Back</button>
                <button type="button" id="confirmSaveBtn" class="futuristic-btn">Confirm & Save</button>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const openModalBtn = document.getElementById('openConfirmModalBtn');
            if(openModalBtn) {
                const confirmSaveBtn = document.getElementById('confirmSaveBtn');
                const categorizeForm = document.getElementById('categorizeForm');
                const confirmationModal = new bootstrap.Modal(document.getElementById('confirmationModal'));
                const confirmationTableContainer = document.getElementById('confirmationTableContainer');

                openModalBtn.addEventListener('click', function () {
                    const selections = {};
                    const selectionTable = document.getElementById('selectionTable');
                    const headers = Array.from(selectionTable.querySelectorAll('thead th')).map(th => th.textContent.trim());
                    const checkedBoxes = categorizeForm.querySelectorAll('input[type="checkbox"]:checked');
                    
                    if(checkedBoxes.length === 0) {
                        alert("No changes selected. Please check at least one box to save.");
                        return;
                    }

                    checkedBoxes.forEach(box => {
                        const row = box.closest('tr');
                        const noteTitle = row.querySelector('td:first-child').textContent.trim();
                        const cellIndex = box.closest('td').cellIndex;
                        const categoryName = headers[cellIndex];

                        if (!selections[categoryName]) {
                            selections[categoryName] = [];
                        }
                        selections[categoryName].push(noteTitle);
                    });

                    let tableHtml = `<table class="table futuristic-table table-bordered mt-2">
                                        <thead>
                                            <tr><th>Subject (Category)</th><th>Documents (Notes)</th></tr>
                                        </thead>
                                        <tbody>`;
                    for (const category in selections) {
                        tableHtml += `<tr>
                                        <td>${category}</td>
                                        <td><ul>`;
                        selections[category].forEach(note => {
                            tableHtml += `<li>${note}</li>`;
                        });
                        tableHtml += `</ul></td>
                                    </tr>`;
                    }
                    tableHtml += `</tbody></table>`;
                    
                    confirmationTableContainer.innerHTML = tableHtml;
                    confirmationModal.show();
                });

                confirmSaveBtn.addEventListener('click', function () {
                    categorizeForm.submit();
                });
            }
        });
    </script>
}